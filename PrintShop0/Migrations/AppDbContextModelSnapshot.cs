// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrintShop0.Models;

namespace PrintShop0.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PrintShop0.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Shirts",
                            Description = "All printed shirts"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Mugs",
                            Description = "Printed mugs"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Mouse Pads",
                            Description = "Printed mouse pads"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Hoodies",
                            Description = "All printed hoodies"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Caps",
                            Description = "All printed caps"
                        });
                });

            modelBuilder.Entity("PrintShop0.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("OrderPlaced")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PrintShop0.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("PrintShop0.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ImageThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProductOfTheWeek")
                        .HasColumnType("bit");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            ImageThumbnailUrl = "https://wp-en.oberlo.com/wp-content/uploads/2020/01/morning-1772286_1280.jpg",
                            ImageUrl = "https://wp-en.oberlo.com/wp-content/uploads/2020/01/morning-1772286_1280.jpg , https://www.palmgear.com/wp-content/uploads/2019/11/How-Much-Does-It-Cost-To-Print-A-T-shirt.jpg , https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTaMjzqUIT3ihCKXTL47d9rpCwPKGFJNw8wxA&usqp=CAU",
                            InStock = true,
                            IsProductOfTheWeek = false,
                            LongDescription = "T-Shirt printed with a picture or logo of your choice.  Assorted colours and sizes.",
                            Name = "Printed Shirt",
                            Price = 79.95m,
                            ShortDescription = "Printed T-Shirt"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            ImageThumbnailUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcR4d8_u5B5HZL_WpzrFJ6ZXHfC7M6uyhR3cBg&usqp=CAU",
                            ImageUrl = "https://lh3.googleusercontent.com/proxy/FIfkzJvAauxcOfBaFQ5f7GE9GFnNY0zgnhWoVKldCCxZGHtUu27Km5x1rxTMWwWuYn_bM0dvqAtLwiQEES7Z9TFi_aJqIRtnLs2kNUkXGOYiZuxndN1JwFngGw , https://img3.exportersindia.com/product_images/bc-full/2018/11/1788827/white-custom-mug-printing-1543206414-4470638.jpeg , https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcR4d8_u5B5HZL_WpzrFJ6ZXHfC7M6uyhR3cBg&usqp=CAU",
                            InStock = true,
                            IsProductOfTheWeek = false,
                            LongDescription = "A white coffee mug with a picture or logo printed on it.",
                            Name = "Printed Mug",
                            Price = 45.95m,
                            ShortDescription = "Printed Mug"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 4,
                            ImageThumbnailUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSKV1EYUd0NqW6odYKQXxwFkrUJpfRuW0eIzw&usqp=CAU",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRsgJYPLL3JBYAwj4LGInz32sDx_AE2vWyN2w&usqp=CAU , https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSKV1EYUd0NqW6odYKQXxwFkrUJpfRuW0eIzw&usqp=CAU",
                            InStock = true,
                            IsProductOfTheWeek = true,
                            LongDescription = "A printed hoodie, with a picture or logo of your choice, for the colder days to add to your wardrobe.  Assorted colours and sizes.",
                            Name = "Printed Hoodie",
                            Price = 109.95m,
                            ShortDescription = "Printed Solid Hoodie"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 3,
                            ImageThumbnailUrl = "https://www.makro.co.za/sys-master/images/hde/h4b/9642469490718/73d7bd0e-1357-4675-a7ba-14a9e1b20843-qpn13_large",
                            ImageUrl = "https://www.makro.co.za/sys-master/images/hde/h4b/9642469490718/73d7bd0e-1357-4675-a7ba-14a9e1b20843-qpn13_large",
                            InStock = true,
                            IsProductOfTheWeek = true,
                            LongDescription = "A black mousepad printed with a picture or logo of your choice.  Size: 400mmx300mm",
                            Name = "Printed Mouse Pad",
                            Price = 69.95m,
                            ShortDescription = "Printed Mouse Pad"
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 5,
                            ImageThumbnailUrl = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.fibre2fashion.com%2Faccessories%2Fmen-s-printed-caps-buyers-19160236&psig=AOvVaw1dMDqjjS20SvkFCy9FiFYf&ust=1602745876733000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCMitve3Ds-wCFQAAAAAdAAAAABAO",
                            ImageUrl = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.fibre2fashion.com%2Faccessories%2Fmen-s-printed-caps-buyers-19160236&psig=AOvVaw1dMDqjjS20SvkFCy9FiFYf&ust=1602745876733000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCMitve3Ds-wCFQAAAAAdAAAAABAO , https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.facebook.com%2Fghostwhitetoner%2Fphotos%2Fbad-hair-days-are-for-self-printed-caps-made-with-the-ghost-white-toner-httpswww%2F1003048973191333%2F&psig=AOvVaw1dMDqjjS20SvkFCy9FiFYf&ust=1602745876733000&source=images&cd=vfe&ved=0CAIQjRxqFwoTCMitve3Ds-wCFQAAAAAdAAAAABAU",
                            InStock = true,
                            IsProductOfTheWeek = true,
                            LongDescription = "Block out the sun with this stylish printed cap. A black baseball cap printed with a logo or picture of your choice. One size fits all.",
                            Name = "Printed Cap",
                            Price = 39.95m,
                            ShortDescription = "Printed Cap"
                        });
                });

            modelBuilder.Entity("PrintShop0.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("ShoppingCartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCartId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShoppingCartItemId");

                    b.HasIndex("ProductId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("PrintShop0.Models.OrderDetail", b =>
                {
                    b.HasOne("PrintShop0.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrintShop0.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrintShop0.Models.Product", b =>
                {
                    b.HasOne("PrintShop0.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrintShop0.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("PrintShop0.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });
#pragma warning restore 612, 618
        }
    }
}
